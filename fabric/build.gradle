plugins {
    id 'multiloader-loader'
    id 'fabric-loom'
}

repositories {
    maven { url "https://maven.ladysnake.org/releases" }
    maven { url "https://maven.terraformersmc.com/" }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

    // ModMenu
    modImplementation "curse.maven:modmenu-308702:5810603"

    modImplementation "curse.maven:monolib-968432:6123972"

    // Cardinal Components
    modApi include("dev.onyxstudios.cardinal-components-api:cardinal-components-base:6.1.1")
    modApi include("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:6.1.1")

    // Trinkets
    modImplementation "dev.emi:trinkets:3.10.0"
}

loom {
    def aw = project(':common').file("src/main/resources/${mod_id}.accesswidener")
    if (aw.exists()) {
        accessWidenerPath.set(aw)
    }
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName('Fabric Client')
            ideConfigGenerated(true)
            runDir('runs/client')
        }
        server {
            server()
            setConfigName('Fabric Server')
            ideConfigGenerated(true)
            runDir('runs/server')
        }
    }
}