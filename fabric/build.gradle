plugins {
    id 'java'
    id 'idea'
    id 'fabric-loom'
}

base {
    archivesName = "${mod_id}-fabric-${minecraft_version}"
}

repositories {
    maven { url "https://maven.ladysnake.org/releases" }
    maven { url "https://maven.terraformersmc.com/" }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    // mappings loom.officialMojangMappings()
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip")
    }
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    implementation project(":common")

    // ModMenu
    modImplementation "curse.maven:modmenu-308702:5162837"

    modImplementation "curse.maven:monolib-968432:6123964"

    // Cardinal Components
    modApi include("dev.onyxstudios.cardinal-components-api:cardinal-components-base:5.2.0")
    modApi include("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:5.2.0")

    // Trinkets
    modImplementation "dev.emi:trinkets:3.7.2"
}

loom {
    if (project(":common").file("src/main/resources/${mod_id}.accesswidener").exists()) {
        accessWidenerPath.set(project(":common").file("src/main/resources/${mod_id}.accesswidener"))
    }
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    source(project(":common").sourceSets.main.allSource)
}

processResources {
    from project(":common").sourceSets.main.resources
}
